% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svc_MakeADFun.R
\name{svc_MakeADFun}
\alias{svc_MakeADFun}
\title{Construct a \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}} object for the exponential Ornstein-Uhlenbeck stochastic volatility model.}
\usage{
svc_MakeADFun(
  Xt,
  log_VPt,
  dt,
  log_Vt,
  alpha,
  log_gamma,
  mu,
  log_sigma,
  logit_rho,
  logit_tau,
  logit_omega,
  par_list,
  iasset = "all",
  ...
)
}
\arguments{
\item{Xt}{Matrix of \verb{nobs x (nasset + 1)} asset log prices, where the first column is that of the asset common-factor proxy.}

\item{log_VPt}{Vector of \code{nobs} volatility proxy values on the log standard deviation scale.  See 'Details'.}

\item{dt}{Interobservation time.}

\item{log_Vt}{Optional vector of \verb{nobs x (nasset + 1)} volatilities on the log standard deviation scale.  See 'Details'.}

\item{alpha}{Optional vector of \code{(nasset + 1)} asset growth rate parameters.  See 'Details'.}

\item{log_gamma}{Optional vector of \code{(nasset + 2)} log-volatility mean reversion parameters on the log scale.  The first two correspond to the volatility proxy and the common-factor asset's volatility, respectively.  See 'Details'.}

\item{mu}{Optional vector of \code{(nasset + 2)} log-volatility mean parameters.  See 'Details'.}

\item{log_sigma}{Optional vector of \code{(nasset + 2)} log-volatility diffusion parameters on the log scale.  See 'Details'.}

\item{logit_rho}{Optional vector of \code{(nasset + 1)} correlation parameters between asset and volatility innovations, on the logit scale.  The first one is that of the common-factor asset proxy.  See 'Details'.}

\item{logit_tau}{Optional vector of \code{(nasset + 1)} correlation parameters between the latent volatilities and the volatility proxy.  See 'Details'.}

\item{par_list}{Optional list with named elements consisting of a subset of \code{log_Vt}, \code{alpha}, \code{log_gamma}, \code{mu}, \code{log_sigma}, \code{logit_rho}, \code{logit_tau}, and \code{logit_omega}.  Values in \code{par_list} will supercede those of the corresponding individual argument if both are provided.}

\item{iasset}{Index of asset for which parameters are to be treated as non-fixed.  Either the character string "all" indicating that no parameters are fixed, or an integer in \code{-1:nasset}, where \code{-1} denotes the proxy for the volatility factor, \code{0} denotes the proxy for the asset common factor, and \code{1:nasset} denotes the remaining assets.}

\item{...}{Additional arguments to \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}.}
}
\value{
The result of a call to \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}.
}
\description{
Construct a \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}} object for the exponential Ornstein-Uhlenbeck stochastic volatility model.
}
\details{
The common-factor multivariate stochastic volatility (SVC) model for multiple assets is given by the stochastic differential equation (SDE) ...

\code{svc_MakeADFun} implements the Euler approximation to this SDE...

The optional latent variable and parameter inputs \code{log_Vt}, \code{alpha}, ..., \code{logit_rho} can be set to initialize optimization routines.  The default values are for each parameter vector to consist of the zero vector of the appropriate length, and the columns of \code{log_Vt} to be the log of windowed standard deviation estimates for the corresponding asset as calculated by \code{\link[=sv_init]{sv_init()}}.

\code{svc_MakeADFun} is a wrapper to \code{\link[TMB:MakeADFun]{TMB::MakeADFun()}}.  This function may be called on the underlying C++ template provided by \pkg{svcommon} via\preformatted{TMB::MakeADFun(data = list(model = "sv_common", ...),
               parameters = list(...),
               DLL = "svcommon_TMBExports",
               ...)
}
}
